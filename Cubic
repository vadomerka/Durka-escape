<!DOCTYPE html>
<html>
  <head>
    <meta charset=utf-8>
    <title>My first Three.js app</title>
    <style>
      body { margin: 0; }
      canvas { width: 100%; height: 100% }
      </style>
  </head>
  <body>
  	<button hidden="true" onclick="alert('gotcha!');">hidden-button</button>

  	<p id = "screene"></p>
    <script src="js/three.js"></script>
    <script>
    	var rotx = 0;
    	var roty = 0;
    	var pi2 = 3.1415 * 2;
    	//var side = 0;
    	//var last_side = 0;
    	var sides = [[4, 4, 4, 4], 
    				 [0, 1, 2, 3], 
    				 [5, 5, 5, 5], 
    				 [2, 3, 0, 1]];
    	side_r = 1;
    	side_c = 0;
    	
    	var scene = new THREE.Scene();
		var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

		var renderer = new THREE.WebGLRenderer();
		renderer.setSize( window.innerWidth, window.innerHeight);
		document.body.appendChild( renderer.domElement);

		var geometry = new THREE.BoxGeometry( 1, 1, 1 );
		const loader = new THREE.TextureLoader();
    //var material = new THREE.MeshBasicMaterial( { map: loader.load('https://threejs.org/manual/examples/resources/images/wall.jpg'),} );
    //var cube = new THREE.Mesh( geometry, material );
    const materials = [
      new THREE.MeshBasicMaterial({map: loader.load('https://threejs.org/manual/examples/resources/images/flower-1.jpg')}),
      new THREE.MeshBasicMaterial({map: loader.load('https://threejs.org/manual/examples/resources/images/flower-2.jpg')}),
      new THREE.MeshBasicMaterial({map: loader.load('https://threejs.org/manual/examples/resources/images/flower-3.jpg')}),
      new THREE.MeshBasicMaterial({map: loader.load('https://threejs.org/manual/examples/resources/images/flower-4.jpg')}),
      new THREE.MeshBasicMaterial({map: loader.load('https://threejs.org/manual/examples/resources/images/flower-5.jpg')}),
      new THREE.MeshBasicMaterial({map: loader.load('https://threejs.org/manual/examples/resources/images/flower-6.jpg')}),
    ];
    const cube = new THREE.Mesh(geometry, materials);
    scene.add( cube );

		camera.position.z = 2;

		function render() {
			requestAnimationFrame( render );
			cube.rotation.y += rotx;
			cube.rotation.x += roty;
			//cube.rotateX(6.28);
			degreex = cube.rotation.y;
			degreey = cube.rotation.x;
			if (degreex > (3.14*2)){
				degreex = 0;
				cube.rotation.y = 0;
			}

			if (degreex > 0){
				if ((degreex % (3.14 * 0.5)) < 0.1){
					cube.rotation.y = 0;
    				rotx = 0;
    				}
    			}
    		if (degreex < 0) {
    			if (((pi2 + degreex) % (3.14 * 0.5)) < 0.1){
					cube.rotation.y = 0;
    				rotx = 0;
    			}
    		}
    		if (degreey > 0){
    			if ((degreey % (3.14 * 0.5)) < 0.1){
    				cube.rotation.x = 0;
    				roty = 0;
    			}
    		}
    		if (degreey < 0){
    			if (((pi2 + degreey) % (3.14 * 0.5)) < 0.1){
    				cube.rotation.x = 0;
    				roty = 0;
    			}
    		}
			renderer.render( scene, camera );
		}
  		render();

		let screenLog = document.querySelector('#screene');
    	document.addEventListener('mousedown', logKey);
    	function logKey(e) {
    		var x = e.clientX;
    		var y = e.clientY;
    		//rotx = 0; //full rotation = 6.28
    		//roty = 0;
    		if (e.which == 1 && y <= 365 && y >= 265 && x >= 733 && x <= 1148){ // UP
    			roty = 0.1;
    			if (side_r == 0){
    				side_r = 3;
    			}
    			else{
    			side_r = (side_r - 1);
    			}

    		}
    		if (e.which == 1 && y <= 680 && y >= 265 && x >= 1148 && x <= 1248){ // RIGHT
    			rotx = -0.1;
    			if (sides[side_r][side_c] <= 3){
    				
    			}
    			side_c = (side_c + 1) % 4;
    			
    		}
    		if (e.which == 1 && y <= 780 && y >= 680 && x >= 733 && x <= 1148){ // DOWN
    			roty = -0.1;
    		}
    		if (e.which == 1 && y <= 680 && y >= 265 && x >= 633 && x <= 733){ // LEFT
    			rotx = 0.1;
    			last_side = side;
    			if (side_c == 0){
    				side_c = 3;
    			}
    			else {
    				side_c = (side_c - 1) % 4;
    			}
    		}
    		screenLog.innerText = `Client X/Y: ${sides[side_r][side_c]}`;
    	}
    </script>
    <section role="None">test section</section>
  </body>
</html>
